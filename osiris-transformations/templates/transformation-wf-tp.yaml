apiVersion: argoproj.io/v1alpha1
kind: WorkflowTemplate
metadata:
  name: {{ .Values.global.appName }}-wf-tp
  labels:
    app: {{ .Values.global.app }}
    transformation: {{ .Values.global.transformation }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  podMetadata:
    annotations:
      workflows.argoproj.io/kill-cmd-jaeger-agent: '["sh", "-c", "kill -%d $(pidof entrypoint.sh)"]'
  entrypoint: transformation
  podGC:
    # Pod GC strategy must be one of the following:
    # * OnPodCompletion - delete pods immediately when pod is completed (including errors/failures)
    # * OnPodSuccess - delete pods immediately when pod is successful
    # * OnWorkflowCompletion - delete pods when workflow is completed
    # * OnWorkflowSuccess - delete pods when workflow is successful
    strategy: {{ .Values.workflowTemplate.podGC }}
  parallelism: {{ .Values.workflowTemplate.parallelism }}
  templates:
  - name: transformation
    inputs:
      parameters:
      - name: arguments
    {{- if .Values.workflowTemplate.nodeSelector }}
    nodeSelector:
{{ .Values.workflowTemplate.nodeSelector | toYaml | indent 6}}
    {{- end }}
    metrics:
      prometheus:
      - name: result_counter
        help: "Count of step execution by result status"
        labels:
        - key: name
          value: {{ .Values.global.appName }}
        - key: component
          value: {{ .Values.global.app }}
        - key: status
          value: "{{`{{status}}`}}"    # Argo variable in `labels`
        counter:
          value: "1"
    volumes:
      - name: transformation-cm
        configMap:
          name: {{ .Values.global.appName }}-cm
    metadata:
      annotations:
        vault.hashicorp.com/agent-inject: "true"
        vault.hashicorp.com/agent-pre-populate-only: "true"
        vault.hashicorp.com/role: "{{ .Values.global.secretName }}-authentication-reader"
        vault.hashicorp.com/auth-path: "auth/kubernetes-{{ .Values.global.environment }}"
        vault.hashicorp.com/agent-inject-secret-credentials.ini: "{{ .Values.global.secretName }}-authentication/data/credentials"
        vault.hashicorp.com/agent-inject-template-credentials.ini: |
          {{`{{-`}} with secret "{{ .Values.global.secretName }}-authentication/data/credentials" {{`-}}`}}
{{ .Values.secretTemplate | indent 12 }}
          {{`{{- end -}}`}}
    container:
      image: "{{ .Values.workflowTemplate.image.repository }}:{{ .Values.workflowTemplate.image.tag }}"
      command: ["/bin/sh", "-c"]
      args:
      - |
{{ .Values.workflowTemplate.command | indent 8 }} {{`{{inputs.parameters.arguments}}`}}
      volumeMounts:
        - name: transformation-cm
          mountPath: "/etc/osiris/"
          readOnly: true
{{- if .Values.jaeger.enabled }}
    sidecars:
      - name: jaeger-agent
        image: jaegertracing/jaeger-agent:latest
        imagePullPolicy: IfNotPresent
        ports:
          - containerPort: 5775
            name: zk-compact-trft
            protocol: UDP
          - containerPort: 5778
            name: config-rest
            protocol: TCP
          - containerPort: 6831
            name: jg-compact-trft
            protocol: UDP
          - containerPort: 6832
            name: jg-binary-trft
            protocol: UDP
          - containerPort: 14271
            name: admin-http
            protocol: TCP
        args:
          - --reporter.grpc.host-port=dns:///tooling-jaeger-operator-{{ .Values.global.environment }}-jaeger-collector-headless.monitoring:14250
          - --reporter.type=grpc
{{- end }}
